{"version":3,"sources":["features/Controls/Controls.module.css","features/Controls/ControlsCheckBox/ControlsCheckBox.module.css","features/ColorPalettes/ColorPalette/ColorPaletteCell/ColorPaletteCell.module.css","features/ColorPalettes/ColorPalettes.module.css","features/ColorPalettes/ColorPalette/ColorPalette.module.css","features/Colors/colorsReducer.js","features/Controls/controlsReducer.js","app/store/createReducer.js","features/Controls/controlsConstants.js","features/Quotes/quotesReducer.js","app/store/rootReducer.js","app/store/store.js","features/Controls/ControlsCheckBox/ControlsCheckBox.jsx","features/Controls/Controls.jsx","features/Controls/controlsActions.js","app/utils/findLuma.js","features/ColorPalettes/ColorPalette/ColorPaletteCell/ColorPaletteCell.jsx","features/ColorPalettes/ColorPalette/ColorPalette.jsx","features/ColorPalettes/ColorPalettes.jsx","app/layout/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","ControlsStyle","ColorType","ColorBox","Checked","ColorCell","ColorName","HoverOptions","HoverButton","EmptyColorList","Modal","modalOpen","QuoteText","None","ModalClose","ClipBoardErrorStyles","ColorHEX","ColorRGB","modalClose","ColorPaletteStyle","initState","green","name","hex","rgb","red","blue","gold","selectedColors","type","focusMode","createReducer","fnMap","state","arguments","length","undefined","_ref","payload","handler","_createReducer","Object","defineProperty","color","includes","objectSpread","toConsumableArray","filter","c","concat","combineReducers","colors","controlsConfig","controlsReducer","quotes","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","controlsCheckBox","checked","toggleSelectedColor","classes","react_default","a","createElement","className","join","style","backgroundColor","onClick","Controls","_this$props","this","props","toggleColorType","toggleFocusMode","colorsList","keys","map","ControlsCheckBox","key","Component","actions","connect","findLuma","startsWith","substring","parseInt","_c$split","slice","replace","split","_c$split2","slicedToArray","colorPaletteCell","selectHanlder","returnType","word","Math","random","colorPalette","colorRow","ColorPaletteCell","assign","ColorPalettes","copied","copiedColor","clipBoardError","navigator","clipboard","writeText","then","_this","setState","catch","error","hideModalHandler","_this2","_this$state","displayColors","quote","floor","copiedHEXColor","copiedRGBColor","copiedHEXColorText","copiedRGBColorText","copiedColorObj","reduce","acc","el","find","displayColorsList","marginBottom","ColorPalette","paddingTop","background","forEach","push","App","features_Controls_Controls","features_ColorPalettes_ColorPalettes","Boolean","location","hostname","match","ReactDOM","render","es","layout_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.610c5aae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ControlsStyle\":\"Controls_ControlsStyle__3co_2\",\"ColorType\":\"Controls_ColorType__dyw4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColorBox\":\"ControlsCheckBox_ColorBox__21sSs\",\"Checked\":\"ControlsCheckBox_Checked__MTile\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColorCell\":\"ColorPaletteCell_ColorCell__1Prm-\",\"ColorName\":\"ColorPaletteCell_ColorName__2-s9B\",\"HoverOptions\":\"ColorPaletteCell_HoverOptions__1TX-C\",\"HoverButton\":\"ColorPaletteCell_HoverButton__2pVpm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EmptyColorList\":\"ColorPalettes_EmptyColorList__3Dwto\",\"Modal\":\"ColorPalettes_Modal__2ya1-\",\"modalOpen\":\"ColorPalettes_modalOpen__3rYy7\",\"QuoteText\":\"ColorPalettes_QuoteText__-WpJY\",\"None\":\"ColorPalettes_None__38-pb\",\"ModalClose\":\"ColorPalettes_ModalClose__27KO6\",\"ClipBoardErrorStyles\":\"ColorPalettes_ClipBoardErrorStyles__2pWcg\",\"ColorHEX\":\"ColorPalettes_ColorHEX__10e0Z\",\"ColorRGB\":\"ColorPalettes_ColorRGB__2nTvq\",\"modalClose\":\"ColorPalettes_modalClose__cRr91\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColorPaletteStyle\":\"ColorPalette_ColorPaletteStyle__2RB5X\"};","const initState = {\n  green: [\n    {\n      name: \"Primary Green\",\n      hex: \"#24b47e\",\n      rgb: \"rgb(36,180,126)\"\n    },\n    {\n      name: \"Emerrald\",\n      hex: \"#2ecc71\",\n      rgb: \"rgb(46,204,113)\"\n    },\n    {\n      name: \"Nephritis\",\n      hex: \"#27ae60\",\n      rgb: \"rgb(39,174,96)\"\n    },\n    {\n      name: \"Shiny Shamrock\",\n      hex: \"#5FAD56\",\n      rgb: \"rgb(95,173,86)\"\n    },\n    {\n      name: \"Paris green\",\n      hex: \"#45CB85\",\n      rgb: \"rgb(69,203,133)\"\n    },\n    {\n      name: \"Light Malachite green\",\n      hex: \"#70EE9C\",\n      rgb: \"rgb(112,238,156)\"\n    },\n    {\n      name: \"Mint\",\n      hex: \"#4FB286\",\n      rgb: \"rgb(79,178,134)\"\n    }\n  ],\n  red: [\n    {\n      name: \"Cardinal\",\n      hex: \"#D01F39\",\n      rgb: \"rgb(208, 31, 57)\"\n    },\n    {\n      name: \"Fire Engine Red\",\n      hex: \"#CA2027\",\n      rgb: \"rgb(202, 32, 39)\"\n    },\n    {\n      name: \"Light Carmin Pink\",\n      hex: \"#EF626C\",\n      rgb: \"rgb(239,98,108)\"\n    },\n    {\n      name: \"Ruby Red\",\n      hex: \"#931621\",\n      rgb: \"rgb(239,98,108)\"\n    },\n    {\n      name: \"Terra Cotta\",\n      hex: \"#ED6A5A\",\n      rgb: \"rgb(237,106,90)\"\n    },\n    {\n      name: \"Carmine Pink\",\n      hex: \"#F44E3F\",\n      rgb: \"rgb(244,78,63)\"\n    },\n    {\n      name: \"Red Orange\",\n      hex: \"#FB534A\",\n      rgb: \"rgb(251,83,74)\"\n    }\n  ],\n  blue: [\n    {\n      name: \"Honolulu Blue\",\n      hex: \"#0067B1\",\n      rgb: \"rgb(0, 103, 177)\"\n    },\n    {\n      name: \"Maastricht blue\",\n      hex: \"#0A2239\",\n      rgb: \"rgb(10,34,57)\"\n    },\n    {\n      name: \"Rich Electric Blue\",\n      hex: \"#058ED9\",\n      rgb: \"rgb(5,142,217)\"\n    },\n    {\n      name: \"Dodger Blue\",\n      hex: \"#1098F7\",\n      rgb: \"rgb(16,152,247)\"\n    },\n    {\n      name: \"Midnight blue\",\n      hex: \"#150578\",\n      rgb: \"rgb(21,5,120)\"\n    },\n    {\n      name: \"Blue-Violet\",\n      hex: \"#441678\",\n      rgb: \"rgb(68, 22, 120)\"\n    },\n    {\n      name: \"Cadet Blue\",\n      hex: \"#51A3A3\",\n      rgb: \"rgb(81,163,163)\"\n    }\n  ],\n  gold: [\n    {\n      name: \"UCLA Gold\",\n      hex: \"#FFB302\",\n      rgb: \"rgb(255, 179, 2)\"\n    },\n    {\n      name: \"Selective Yellow\",\n      hex: \"#FFBA01\",\n      rgb: \"rgb(255, 186, 1)\"\n    },\n    {\n      name: \"Golden Poppy\",\n      hex: \"#FEC300\",\n      rgb: \"rgb(254, 195, 0)\"\n    },\n    {\n      name: \"Tangerine Yellow\",\n      hex: \"#FFCF00\",\n      rgb: \"rgb(255, 207, 0)\"\n    },\n    {\n      name: \"School Bus Yellow\",\n      hex: \"#FED901\",\n      rgb: \"rgb(254, 217, 1)\"\n    },\n    {\n      name: \"Carrot Orange\",\n      hex: \"#EF9118\",\n      rgb: \"rgb(239,145,24)\"\n    },\n    {\n      name: \"Yellow Orange\",\n      hex: \"#FFAE2F\",\n      rgb: \"rgb(255,174,47)\"\n    }\n  ]\n};\n\nexport default (state = initState) => state;\n","import {\n  TOGGLE_SELECTED_COLOR,\n  TOGGLE_COLOR_TYPE,\n  TOGGLE_FOCUS_MODE\n} from \"./controlsConstants\";\nimport createReducer from \"../../app/store/createReducer\";\n\nconst initState = {\n  selectedColors: [],\n  type: \"HEX\",\n  focusMode: \"OFF\"\n};\n\nconst toggleSelectedColor = (state = initState, { color }) => {\n  if (!state.selectedColors.includes(color)) {\n    return {\n      ...state,\n      selectedColors: [...state.selectedColors, color]\n    };\n  }\n  return {\n    ...state,\n    selectedColors: [...state.selectedColors.filter(c => c !== color)]\n  };\n};\n\nconst toggleColorType = state => {\n  if (state.type === \"HEX\") {\n    return {\n      ...state,\n      type: \"RGB\"\n    };\n  } else if (state.type === \"RGB\") {\n    return {\n      ...state,\n      type: \"HEX\"\n    };\n  }\n};\n\nconst toggleFocusMode = state => {\n  if (state.focusMode === \"ON\") {\n    return {\n      ...state,\n      focusMode: \"OFF\"\n    };\n  }\n  return {\n    ...state,\n    focusMode: \"ON\"\n  }\n};\n\nexport default createReducer(initState, {\n  [TOGGLE_SELECTED_COLOR]: toggleSelectedColor,\n  [TOGGLE_COLOR_TYPE]: toggleColorType,\n  [TOGGLE_FOCUS_MODE]: toggleFocusMode\n});\n","export default (initState, fnMap) => {\n  return (state = initState, { type, payload }) => {\n    const handler = fnMap[type];\n    return handler ? handler(state, payload) : state;\n  };\n};\n","export const TOGGLE_SELECTED_COLOR = \"TOGGLE_SELECTED_COLOR\";\nexport const TOGGLE_COLOR_TYPE = \"TOGGLE_COLOR_TYPE\";\nexport const TOGGLE_FOCUS_MODE = \"TOGGLE_FOCUS_MODE\";\n","const initState = [\n  \"Just Go For It! 🏹\",\n  \"It Will Rock 🎸\",\n  \"Great 💟\",\n  \"You seems to be great designer 🎯\",\n  \"Awesome 😍\",\n  \"Holy Christ, its my personal fav 😏\",\n  \"Most Picked Color hoorey, just kiddi'n 😄\"\n];\n\nexport default (state = initState) => state;\n","import { combineReducers } from \"redux\";\n\nimport colorsReducer from \"../../features/Colors/colorsReducer\";\nimport controlsReducer from \"../../features/Controls/controlsReducer\";\nimport quoteReducer from \"../../features/Quotes/quotesReducer\";\n\nexport default combineReducers({\n  colors: colorsReducer,\n  controlsConfig: controlsReducer,\n  quotes: quoteReducer\n});\n","import { createStore } from \"redux\";\n\nimport rootReducer from \"./rootReducer\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nif (module.hot) {\n  module.hot.accept(\"./rootReducer\", () => {\n    const nextReducer = require(\"./rootReducer\").default;\n    store.replaceReducer(nextReducer);\n  });\n}\n\nexport default store;\n","import React from \"react\";\n\nimport { ColorBox, Checked } from \"./ControlsCheckBox.module.css\";\n\nconst controlsCheckBox = ({ checked, color, name, toggleSelectedColor }) => {\n  const classes = [ColorBox, checked ? Checked : \"\"];\n  return (\n    <div\n      className={classes.join(\" \")}\n      style={{ backgroundColor: color }}\n      onClick={() => toggleSelectedColor(name)}\n    />\n  );\n};\n\nexport default controlsCheckBox;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  toggleSelectedColor,\n  toggleColorType,\n  toggleFocusMode\n} from \"./controlsActions\";\nimport ControlsCheckBox from \"./ControlsCheckBox/ControlsCheckBox\";\nimport { ControlsStyle, ColorType } from \"./Controls.module.css\";\n\nclass Controls extends Component {\n  render() {\n    const {\n      colors,\n      selectedColors,\n      type,\n      focusMode,\n      toggleSelectedColor,\n      toggleColorType,\n      toggleFocusMode\n    } = this.props;\n    const colorsList = Object.keys(colors).map(color => {\n      return (\n        <ControlsCheckBox\n          key={color}\n          checked={selectedColors.includes(color)}\n          color={colors[color][0].hex}\n          name={color}\n          toggleSelectedColor={toggleSelectedColor}\n        />\n      );\n    });\n    return (\n      <div className={ControlsStyle}>\n        {focusMode === 'ON' ?\n          <style>\n          {\n            `.parent:hover .child:not(:hover) {\n              filter: grayscale(0.9);\n            }`\n          }\n          </style> : ''\n        }\n        <h4>Controls</h4>\n        <h6 className=\"ml2 mr3\">Colors</h6>\n        {colorsList}\n        <h6 className=\"ml3\">\n          <span>type: </span>\n          <button className={ColorType} onClick={toggleColorType}>\n            {type}\n          </button>\n        </h6>\n        <h6 className=\"ml3\">\n          <span>Focus Mode: </span>\n          <button className={ColorType} onClick={toggleFocusMode}>\n            {focusMode}\n          </button>\n        </h6>\n        <h6 className=\"ml3\">\n          Note: Every Row is Scrollable\n        </h6>\n      </div>\n    );\n  }\n}\n\nconst mapState = ({ colors, controlsConfig }) => ({\n  colors,\n  selectedColors: controlsConfig.selectedColors,\n  type: controlsConfig.type,\n  focusMode: controlsConfig.focusMode\n});\nconst actions = { toggleSelectedColor, toggleColorType, toggleFocusMode };\n\nexport default connect(\n  mapState,\n  actions\n)(Controls);\n","import {\n  TOGGLE_SELECTED_COLOR,\n  TOGGLE_COLOR_TYPE,\n  TOGGLE_FOCUS_MODE\n} from \"./controlsConstants\";\n\nexport const toggleSelectedColor = color => ({\n  type: TOGGLE_SELECTED_COLOR,\n  payload: {\n    color\n  }\n});\n\nexport const toggleColorType = () => ({\n  type: TOGGLE_COLOR_TYPE\n});\n\nexport const toggleFocusMode = () => ({\n  type: TOGGLE_FOCUS_MODE\n});\n","export default (color = \"\") => {\n  if (color.startsWith(\"#\")) {\n    const c = color.substring(1); // strip #\n    const rgb = parseInt(c, 16); // convert rrggbb to decimal\n    const r = (rgb >> 16) & 0xff; // extract red\n    const g = (rgb >> 8) & 0xff; // extract green\n    const b = (rgb >> 0) & 0xff; // extract blue\n\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b; // per ITU-R BT.709\n  } else if (color.startsWith(\"r\") || color.startsWith(\"R\")) {\n    let c = color.substring(4);\n    c = c.slice(0, -1);\n    c = c.replace(/ /g, \"\");\n    var [r, g, b] = c.split(\",\");\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b; // per ITU-R BT.709\n  }\n  return -1;\n};\n","import React from \"react\";\n\nimport { ColorCell, ColorName } from \"./ColorPaletteCell.module.css\";\nimport findLuma from \"../../../../app/utils/findLuma\";\n\nconst colorPaletteCell = ({ name, hex, rgb, type, selectHanlder }) => {\n  const returnType = type === \"HEX\" ? hex : rgb;\n  let color = \"#ddd\";\n  if (findLuma(hex) !== -1) {\n    if (findLuma(hex) > 128) {\n      color = \"#333\";\n    }\n  }\n  return (\n    <div\n      className={[ColorCell, \"child\"].join(\" \")}\n      style={{ backgroundColor: hex }}\n      onClick={() => selectHanlder(returnType)}\n    >\n      <span className={ColorName} style={{ color }}>\n        {name.split(\" \").map(word => (\n          <span key={word + Math.random()}>{word} </span>\n        ))}\n      </span>\n    </div>\n  );\n};\nexport default colorPaletteCell;\n","import React from \"react\";\n\nimport ColorPaletteCell from \"./ColorPaletteCell/ColorPaletteCell\";\n\nimport { ColorPaletteStyle } from \"./ColorPalette.module.css\";\n\nconst colorPalette = ({ colorRow, selectHanlder, type }) =>\n  colorRow.map(color => (\n    <div key={color.hex} className={ColorPaletteStyle}>\n      <ColorPaletteCell type={type} {...color} selectHanlder={selectHanlder} />\n    </div>\n  ));\n\nexport default colorPalette;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport findLuma from '../../app/utils/findLuma'\nimport ColorPalette from \"./ColorPalette/ColorPalette\";\nimport {\n  EmptyColorList,\n  Modal,\n  QuoteText,\n  ModalClose,\n  None,\n  ColorHEX,\n  ColorRGB,\n  ClipBoardErrorStyles\n} from \"./ColorPalettes.module.css\";\n\nclass ColorPalettes extends Component {\n  state = {\n    copied: false,\n    copiedColor: \"\",\n    clipBoardError: false\n  };\n  selectHanlder = color => {\n    if (navigator.clipboard) {\n      navigator.clipboard\n        .writeText(color)\n        .then(() => {\n          this.setState({\n            copied: true,\n            copiedColor: color\n          });\n        })\n        .catch(error => {\n          this.setState({ clipBoardError: true, copiedColor: color });\n        });\n    } else {\n      this.setState({ clipBoardError: true, copiedColor: color });\n    }\n  };\n  hideModalHandler = () => {\n    this.setState({\n      copied: false\n    });\n  };\n  render() {\n    const { copied, copiedColor, clipBoardError } = this.state;\n    const { displayColors, type, quotes, colors } = this.props;\n    const quote = quotes[Math.floor(Math.random() * quotes.length)];\n    let copiedHEXColor = null;\n    let copiedRGBColor = null;\n    let copiedHEXColorText = null;\n    let copiedRGBColorText = null;\n    if (clipBoardError) {\n      const copiedColorObj = Object.keys(colors)\n        .reduce((acc, el) => [...acc, ...colors[el]], [])\n        .find(color => {\n          if (copiedColor === color.hex || copiedColor === color.rgb)\n            return true;\n          return false;\n        });\n      copiedHEXColor = copiedColorObj.hex;\n      copiedRGBColor = copiedColorObj.rgb;\n      copiedHEXColorText = findLuma(copiedHEXColor) > 128 ? '#222' : '#eee'\n      copiedRGBColorText = findLuma(copiedRGBColor) > 128 ? '#222' : '#eee'\n    }\n    const displayColorsList = displayColors.map(colorRow => (\n      <div\n        key={colorRow[0].hex}\n        className=\"Row\"\n        style={{ marginBottom: \"-4px\" }}\n      >\n        <ColorPalette\n          type={type}\n          colorRow={colorRow}\n          selectHanlder={this.selectHanlder}\n        />\n      </div>\n    ));\n    return (\n      <div className=\"Colors parent\" style={{ paddingTop: \"70px\" }}>\n        <div\n          className={[Modal, copied ? \"\" : None].join(\" \")}\n          style={{ background: copiedColor }}\n        >\n          <span className={ModalClose} onClick={this.hideModalHandler}>\n            &#x2715;\n          </span>\n          <span className={QuoteText}>{quote}</span>\n        </div>\n        {clipBoardError && (\n          <div className={ClipBoardErrorStyles}>\n            Unable to copy to clipboard, Here is your color :{\" \"}\n            <span className={ColorHEX} style={{ backgroundColor: copiedHEXColor, color: copiedHEXColorText }}>{copiedHEXColor}</span>\n            <span className={ColorRGB} style={{ backgroundColor: copiedRGBColor, color: copiedRGBColorText }}>{copiedRGBColor}</span>\n          </div>\n        )}\n        {displayColorsList.length > 0 ? (\n          displayColorsList\n        ) : (\n          <div className={EmptyColorList}>Please Selects Colors</div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapState = ({ colors, controlsConfig, quotes }) => {\n  const displayColors = [];\n  controlsConfig.selectedColors.forEach(color => {\n    displayColors.push(colors[color]);\n  });\n  return {\n    colors,\n    displayColors,\n    type: controlsConfig.type,\n    quotes\n  };\n};\n\nexport default connect(\n  mapState,\n  null\n)(ColorPalettes);\n","import React, { Component } from \"react\";\n\nimport Controls from \"../../features/Controls/Controls\";\nimport ColorPalettes from \"../../features/ColorPalettes/ColorPalettes\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Controls />\n        <ColorPalettes />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./app/store/store\";\nimport \"./index.css\";\nimport App from \"./app/layout/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst render = () =>\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n\nif (module.hot) {\n  module.hot.accept(\"./app/layout/App\", () => {\n    setTimeout(render);\n  });\n}\n\nrender();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}